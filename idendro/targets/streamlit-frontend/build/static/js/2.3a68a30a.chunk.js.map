{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/d3-axis/src/identity.js","../node_modules/d3-axis/src/axis.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/array.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/selectChild.js","../node_modules/d3-selection/src/selection/selectChildren.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/iterator.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/join.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/select.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-timer/src/timeout.js","../node_modules/d3-transition/src/transition/schedule.js","../node_modules/d3-transition/src/interrupt.js","../node_modules/d3-interpolate/src/transform/parse.js","../node_modules/d3-interpolate/src/transform/decompose.js","../node_modules/d3-interpolate/src/transform/index.js","../node_modules/d3-transition/src/transition/tween.js","../node_modules/d3-transition/src/transition/interpolate.js","../node_modules/d3-transition/src/transition/attr.js","../node_modules/d3-transition/src/transition/attrTween.js","../node_modules/d3-transition/src/transition/delay.js","../node_modules/d3-transition/src/transition/duration.js","../node_modules/d3-transition/src/transition/ease.js","../node_modules/d3-transition/src/transition/on.js","../node_modules/d3-transition/src/transition/remove.js","../node_modules/d3-transition/src/transition/selection.js","../node_modules/d3-transition/src/transition/style.js","../node_modules/d3-transition/src/transition/styleTween.js","../node_modules/d3-transition/src/transition/textTween.js","../node_modules/d3-transition/src/transition/index.js","../node_modules/d3-transition/src/transition/select.js","../node_modules/d3-transition/src/transition/selectAll.js","../node_modules/d3-transition/src/transition/filter.js","../node_modules/d3-transition/src/transition/merge.js","../node_modules/d3-transition/src/transition/transition.js","../node_modules/d3-transition/src/transition/text.js","../node_modules/d3-transition/src/transition/easeVarying.js","../node_modules/d3-transition/src/transition/end.js","../node_modules/d3-transition/src/selection/transition.js","../node_modules/d3-ease/src/cubic.js","../node_modules/d3-transition/src/selection/index.js","../node_modules/d3-transition/src/selection/interrupt.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/number.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/symlog.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/constant.js","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-zoom/src/transform.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/AwaitValue.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_createForOfIteratorHelper","Symbol","iterator","Array","isArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","module","exports","require","b","for","c","d","g","h","k","l","m","p","q","r","t","v","w","x","y","z","a","u","$$typeof","type","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","arguments","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","this","props","context","refs","updater","G","H","prototype","isReactComponent","setState","Error","forceUpdate","I","constructor","isPureReactComponent","J","current","K","hasOwnProperty","L","key","ref","__self","__source","M","call","children","defaultProps","_owner","O","P","Q","R","pop","result","keyPrefix","func","count","S","push","V","T","U","keys","join","replace","escape","toString","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","assign","Children","map","forEach","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","test1","String","getOwnPropertyNames","test2","fromCharCode","test3","split","letter","shouldUseNative","target","source","from","symbols","to","_arrayLikeToArray","arr","len","arr2","_setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_slicedToArray","_arr","_n","_d","_s","_i","unsupportedIterableToArray","_defineProperty","obj","defineProperty","enumerable","configurable","writable","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","name","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","getOwnPropertyDescriptor","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","descriptor","translateX","translateY","number","scale","center","offset","Math","max","bandwidth","round","entering","__axis","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","window","devicePixelRatio","transform","values","ticks","apply","domain","format","identity","spacing","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","isFinite","getAttribute","parentNode","remove","filter","each","_","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","test","Dispatch","parseTypenames","typenames","types","trim","indexOf","get","set","callback","on","typename","that","args","none","selector","querySelector","array","empty","querySelectorAll","matches","childMatcher","node","find","childFirst","firstElementChild","update","EnterNode","parent","datum","ownerDocument","namespaceURI","_next","_parent","__data__","appendChild","child","insertBefore","bindIndex","group","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","Map","keyValues","has","delete","arraylike","ascending","NaN","xhtml","svg","xlink","xml","xmlns","prefix","namespaces","space","local","attrRemove","removeAttribute","attrRemoveNS","fullname","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","defaultView","document","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","splice","contains","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","firstChild","creatorInherit","uri","documentElement","createElementNS","creatorFixed","namespace","constantNull","removeChild","selection_cloneShallow","clone","cloneNode","selection_cloneDeep","onRemove","__on","j","removeEventListener","listener","options","onAdd","event","contextListener","addEventListener","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","groups","_groups","root","Selection","parents","_parents","subgroups","subnode","subgroup","arrayAll","selectorAll","selectChild","match","childFind","selectChildren","childrenFilter","matcher","constant","enterGroup","updateGroup","exitGroup","previous","i0","i1","_enter","_exit","sparse","onenter","onupdate","onexit","groups0","groups1","m0","m1","min","merges","group0","group1","compareDocumentPosition","sort","compareNode","sortgroups","sortgroup","nodes","size","getAttributeNS","property","classed","html","create","creator","before","deep","selection_iterator","factory","extend","definition","Color","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","clampa","clampi","isNaN","Hsl","hslConvert","clamph","clampt","hsl2rgb","m2","basis","t1","v0","v1","v2","v3","t2","t3","define","channels","displayable","formatHex8","formatHsl","brighter","pow","darker","clamp","linear","gamma","nogamma","exponential","rgbGamma","start","end","colorRgb","rgbSpline","spline","colors","floor","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","setTime","reA","reB","taskHead","taskTail","am","bm","bs","bi","lastIndex","index","one","zero","date","numberArray","valueOf","object","frame","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","stop","elapsed","emptyOn","emptyTween","id","timing","schedules","__transition","self","tween","state","duration","ease","init","schedule","svgNode","active","degrees","PI","rotate","skewX","scaleX","scaleY","sqrt","atan2","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","DOMMatrix","WebKitCSSMatrix","isIdentity","decompose","interpolateTransformSvg","baseVal","consolidate","matrix","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","interpolateNumber","interpolateRgb","interpolateString","interpolate","value1","string00","interpolate0","string1","string0","string10","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","every","styleInterpolate","styleTween","textInterpolate","textTween","Transition","_name","newId","selection_prototype","inherit","id0","id1","styleNull","listener0","styleMaybeRemove","easeVarying","Promise","resolve","reject","cancel","interrupt","defaultTiming","abs","number1","number2","e10","e5","e2","reverse","tickIncrement","r0","r1","power","log","LN10","error","descending","bisector","compare1","compare2","delta","left","lo","hi","mid","right","ascendingBisect","bisectRight","unit","normalize","bimap","d0","d1","polymap","bisect","unknown","transformer","untransform","piecewise","output","input","interpolateValue","rescale","clamper","invert","rangeRound","interpolateRound","continuous","initRange","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","width","comma","precision","formatDecimalParts","toExponential","coefficient","prefixExponent","locale","formatPrefix","exponent","toFixed","toLocaleString","toPrecision","formatRounded","toUpperCase","prefixes","grouping","thousands","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","percent","minus","nan","newFormat","formatTypes","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","charCodeAt","padding","formatLocale","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","linearish","nice","prestep","maxIter","ceil","transformLog","transformExp","exp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","x0","x1","transformSymlog","log1p","transformSymexp","expm1","symlogish","symlog","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","defined","curve","curveLinear","buffer","defined0","pointX","pointY","cosh","zoomRho","rho","rho2","rho4","zoom","p0","p1","ux0","uy0","w0","ux1","uy1","w1","d2","b0","b1","coshr0","sinh","SQRT2","_1","_2","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","_construct","Parent","Class","instance","Function","privateData","WeakMap","wrappers","pd","retv","console","assert","setCancelFlag","passiveListener","canceled","preventDefault","Event","eventTarget","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","defineRedirectDescriptor","defineCallDescriptor","getWrapper","proto","wrapper","BaseEvent","isFunc","defineWrapper","isStopped","setPassiveListener","composedPath","stopPropagation","stopImmediatePropagation","Boolean","composed","cancelBubble","listenersMap","isObject","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","listenerType","prev","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","optionsIsObj","capture","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","defaultPrevented","asyncGeneratorStep","gen","_throw","arg","info","then","_asyncToGenerator","fn","_classCallCheck","Constructor","_defineProperties","_createClass","protoProps","staticProps","_AwaitValue","wrapped","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","wrappedAwait","settle","_invoke","request","_wrapAsyncGenerator","_asyncGeneratorDelegate","inner","awaitWrap","iter","waiting","pump","asyncIterator","flatbuffers","inRange","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","file_identifier","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","decoderError","fatal","opt_code_point","TextDecoder","encoding","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","temp","decode","byteOffset","byteLength","input_stream","code_points","cp","codePointsToString","encode","opt_string","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","encodeUtf8","encoder","_inherits","subClass","superClass","_typeof","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","Super","isNativeReflectConstruct","NewTarget","ITERATOR_DONE","freeze","_json","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","_values","resolvers","_closedPromise","_closedPromiseResolve","reason","return","_ensureOpen","_error","abort","close","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayCtor","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","collapseContiguousByteRanges","reduce","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toUint16Array","toUint32Array","Uint32Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","wrap","buffers","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","fromDOMStream","fromNodeStream","byteRange","cmd","bufferLength","threw","throw","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","onEvent","cleanup","events","evt","destroy","race","enumerableOnly","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","receiver","desc","flatbuf","arrow","apache","org","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","startDecimal","addScale","endDecimal","MILLISECOND","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","NONE","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","BufferType","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","arrayLikeToArray","visit","getVisitFn","throwIfNotFound","visitor","dtype","inferDType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","schema","compareFields","fields","others","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","compareInterval","indices","dictionary","toStringTag","ArrayType","valueType","typeIdToChildIndex","idx","atomicDictionaryId","getId","strideForType","nullCount","childData","_nullCount","Data","stride","nullBitmap","childStride","_sliceBuffers","_sliceChildren","newLength","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","_resize","extra","reserved","reserve","numValid","cur","_ArrayType64","buffer64","ArrayType64","nulls","finished","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","queueingStrategy","highWaterMark","sizeProperty","numChunks","toVector","opts","_pendingLength","pending","_pending","_flush","pendingLength","_flushPending","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","f64","u32","uint16ToFloat64","expo","sigf","float64ToUint16","bignumToString","bignumToBigInt","isArrowBigNumSymbol","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","signed","words","decimalToString","digits","base64","base32","checks","toJSON","hint","num","BN","toBigInt","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","callbackfn","thisArg","str","createRowProxy","getChildAt","defineRowProxyProperties","findIndex","tmp","row","getter","setter","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","Chunked","flatten","_sliceInternal","columns","_children","vector","isValidInternal","getInternal","element","indexOfInternal","arraySet","typedSet","chunkIndex","fromIndex","found","slices","chunkOffsets","chunkLength","chunkOffset","vectors","selectChunkArgs","_field","metadata","Column","column","rest","some","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectChunkArgs","res","selectVectorChildrenArgs","_selectVectorChildrenArgs","ret","entries","fieldIndex","valueIndex","dictionaries","generateDictionaryMap","compareSchemas","columnNames","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","_run","run","childIndex","_valueToChildTypeId","childTypeId","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","newBuilder","defaultOptions","getChildOptions","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","_Footer","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","startRecordBatchesVector","rb","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_footer","recordBatchesLength","dictionariesLength","fileBlock","FileBlock","createBlock","sync","toUint8Array","peek","AsyncByteStream","body","closed","readAt","getInt32","nBytes","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","product","lessThan","_times","_plus","out_buffer","fromString","posn","substr","multiple","times","plus","this_high","other_high","negate","startsWith","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","Int128","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","binaryDataFromJSON","isBool","isUtf8","joined","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","fieldNodes","validity","buffersFromJSON","schemaFieldsFromJSON","_schema","fromJSON","fieldChildrenFromJSON","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","decodeFieldNodes","batch","nodesLength","decodeBuffers","bufferRegions","buffersLength","decodeSchemaFields","fieldsLength","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","VectorAssembler","vectorChildren","assembleResult","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","reset","sink","objectMode","_writeFooter","compareTo","_writeSchema","payload","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","assemble","_writeDictionaries","_writeBodyBuffers","_writeDictionaryBatch","writableStrategy","readableStrategy","writer","RecordBatchStreamWriter","_writeMagic","RecordBatchFileWriter","noopBuf","nullBufs","bitmapLength","ensureSameLengthData","batchLength","batchData","_changeLengthAndBackfillNullBitmap","distributeColumnsIntoRecordBatches","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","numColumns","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","_bindDataAccessors","VectorName","isConcatSpreadable","vectorFromValuesWithType","ArrowType","InputType","typeCtor","dataCtor","ctor","is64bit","_values64","toBigInt64Array","toBigUint64Array","_row","bound","partial0","partial2","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","int32s","_vector","indexOfValue","searchElement","indexOfNull","indexOfUnion","vectorIterator","getFn","nullByte","nullBit","nullableIterator","arrayOfVector","variableWidthColumnErrorMessage","____","visitFields","newDataType","throughIterable","throughAsyncIterable","getByteWidth","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","Writer","nameToIndex","selectAt","columnName","newIdx","oldToNew","_f","_fs","fromStruct","tableFromIterable","tableFromAsyncIterable","isSync","open","opening","cols","_dictionaries","collect","fs","vs","DictionaryCollector","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchReader","fromArrowJSON","fromFileHandle","fromAsyncByteStream","fromByteStream","readAllAsync","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_readFooter","_readDictionaryBatch","seek","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","ge","le","eq","colidx","expr","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","accum","And","Or","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","countBy","scan","scanReverse","predicate","batchIndex","numRows","count_by","countByteLength","counts","_predicate","isBound","FilteredDataFrame","and","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","head","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","_unsupportedIterableToArray","minLen"],"mappings":"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","file":"static/js/2.3a68a30a.chunk.js","sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"./AwaitValue\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"./AwaitValue\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  if (typeof Symbol === \"function\" && Symbol.iterator) {\n    iter[Symbol.iterator] = function () {\n      return this;\n    };\n  }\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"sourceRoot":""}